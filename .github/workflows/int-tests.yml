name: Integration test module

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Start containers
        run: |
          cd tools/testing
          docker-compose down -v
          docker-compose up -d &> dockerOutput.log
          sleep 20
      - name: Inject github build number
        run: |
          # Make github run id available to gradle script via env var BUILD_NUMBER so it ends up in our module descriptor version
          # echo "BUILD_NUMBER=${{github.run_id}}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{github.run_number}}" >> $GITHUB_ENV
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: service
      - name: Run integration test
        working-directory: ./service
        run:
          ./gradlew integrationTest --tests TenantAPISpec*
      - name: Upload Test Results Files
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: testLogfiles
          path: |
            service/build/test-results/**/*.xml
            tools/testing/*.log
          retention-days: 1
      - name: Capture container output
        if: always()
        run: |
          cd tools/testing
          docker ps -a > ps.log
          docker logs minio_tests > minio.log
          docker logs testing_kafka > kafka.log
          docker logs testing_pg > postgres.log
          docker logs testing_zookeeper > zookeeper.log
      - name: Stop containers
        if: always()
        run: |
          cd tools/testing
          docker-compose down -v
          sleep 10
  publish-test-results:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 'setup directory to accept test results'
        run: mkdir -p testLogs/integrationTest
      - name: 'download test results'
        uses: actions/download-artifact@v4
        with:
          name: testLogfiles
          path: /testLogs/integrationTest
      - name: Display structure of downloaded files
        run: ls -R
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "testLogs/**/*.xml"
