import groovy.transform.Field
import org.olf.kb.ErmResource
import org.grails.orm.hibernate.cfg.GrailsHibernateUtil

@Field
ErmResource ermResource

Map customCoverageMap = request?.getAttribute("${controllerName}.${actionName}.customCoverage") as Map

// Check for custom coverage on this resource.
List customCoverageList = customCoverageMap?.get("${ermResource.id}")

json {

  'id' ermResource.id
  'class' GrailsHibernateUtil.unwrapIfProxy(ermResource).class.name
  'name' ermResource.name
  
  if (ermResource.type) {
    'type' g.render (ermResource.type)
  }
  
  if (ermResource.subType) {
    'subType' g.render (ermResource.subType)
  }
  
  if (customCoverageList) {
    
    'coverage' g.render (customCoverageList)
    'customCoverage' true
    
  } else if (ermResource.coverage) {
    
    'coverage' g.render (ermResource.coverage)
    'customCoverage' false
     
  } else {
    'coverage' []
    'customCoverage' false
  }
  
  if (params.controller == 'export' ) {
     // add extra fields for export
     
  }
  
  // Render the full representation of whatever this object is.
  '_object' g.render(GrailsHibernateUtil.unwrapIfProxy(ermResource))
  
}
