import com.k_int.okapi.remote_resources.RemoteOkapiLinkListener
import groovy.transform.Field
import groovyx.net.http.HttpException
import java.util.concurrent.ExecutionException
import java.util.concurrent.Future
import org.olf.erm.RemoteLicenseLink
import org.olf.erm.SubscriptionAgreement
import org.olf.erm.SubscriptionAgreementOrg

@Field
List<SubscriptionAgreement> subscriptionAgreementList

Map<String,Future> licenses = [:]

// Preload any orgs and licenses...
final String licenseProperty = "remoteId${RemoteOkapiLinkListener.FETCHED_PROPERTY_SUFFIX}"
final String orgsProperty = 'orgsUuid_object'
for (SubscriptionAgreement sa : subscriptionAgreementList) {
  // Just access them for now.
  for (RemoteLicenseLink li : sa.linkedLicenses) {
    System.out.println "Looking at ${li.status.value}"
    if (li.status.value == 'controlling') {
      if(li.hasProperty(licenseProperty)){
        System.out.println 'RUNNING'
        licenses[li.id] = (li?.getAt(licenseProperty) as Future)
      }
    }
  }
}
json tmpl.subscriptionAgreement_v1 (subscriptionAgreementList, ['licenses': licenses])
