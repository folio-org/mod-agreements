buildscript {
  repositories {
    jcenter()
    maven { url "https://repo.grails.org/grails/core" }
//    maven { url "http://maven.k-int.com/content/repositories/releases" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:views-gradle:2.0.1"
    classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
    classpath "org.grails.plugins:hibernate5:${gormHibernate-".RELEASE"}"
  }
}

version "${appVersion}"
group "org.olf"

apply plugin:"eclipse"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"

repositories {
  mavenLocal()
  jcenter()
  maven { url "https://repo.grails.org/grails/core" }
}

eclipse {
  classpath {
    defaultOutputDir = file('build/main')
    file {
      whenMerged {
        entries.each {
          if (it.hasProperty('output') && it.output.startsWith('bin/')) {
            it.output = 'build/' + it.output.substring(4)
          }
        }
      }
    }
  }
}

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

dependencies {

  /**** Grails 4 *****/
  developmentOnly("org.springframework.boot:spring-boot-devtools")
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-codecs"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-datasource"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  // compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:views-json"
  compile "org.grails.plugins:views-json-templates"
  compile "org.grails.plugins:events"
  compile "org.grails.plugins:hibernate5"
  compileOnly "io.micronaut:micronaut-inject-groovy"
  console "org.grails:grails-console"
  profile "org.grails.profiles:rest-api"
  // runtime "com.h2database:h2"
  runtime "javax.xml.bind:jaxb-api:2.3.1"


  /************** Testing ************/
  testCompile "org.grails:grails-gorm-testing-support"

  testCompile "org.mockito:mockito-core"
  testCompile "org.grails:grails-web-testing-support"
  testCompile "org.grails.plugins:geb"
  //  testCompile "io.micronaut:micronaut-http-client"
  testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
  testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
  testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
  testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
  testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"

  /*** Application changes and requirements ***/
  compile "org.springframework.boot:spring-boot-starter-undertow" // Replaces spring-boot-starter-tomcat
  compile "org.hibernate:hibernate-core:5.4.19.Final"             // Update to latest 5.4
  runtime "com.zaxxer:HikariCP:3.4.5"                             // Replaces Tomcat JDBC pool
  runtime "org.postgresql:postgresql:42.2.14"
  
  compile 'org.grails.plugins:database-migration:3.1.0'           // Required by Grails Okapi
  compile 'org.liquibase:liquibase-core:3.10.1'                   
  
  compile group: 'com.k_int.grails', name: 'web-toolkit', version: '5.0.0-SNAPSHOT', changing: true
  compile group: 'com.k_int.okapi', name: 'grails-okapi', version: '4.0.0-SNAPSHOT', changing: true
}

bootRun {
  ignoreExitValue true
  jvmArgs(
      '-Dspring.output.ansi.enabled=always',
      '-server',
      '-noverify',
      '-XX:TieredStopAtLevel=1',
      '-Xmx1024m')
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
  configure(groovyOptions) {
    forkOptions.jvmArgs = ['-Xmx1024m']
  }
}
